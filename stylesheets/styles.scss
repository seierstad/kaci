button {
    min-height: 3em;
}
/*
#oscilloscope {
    width: 100vw;
    height: 50vh;
}
*/
label {
    display: inline-block;
}
fieldset {
    display: inline-block;
}
.blink {
    display: inline-block;
    height: 30px;
    width: 30px;
}
.controller .lines {
    stroke-width: 3;
    stroke: black;
}
.keyboard.controller {
    width: 100%;
}
.key {
    stroke: #000;
}
.black {
    fill: #000;
}
.white {
    fill: #fff;
}
.pressed {
    fill: #afe;
}
.dropped {
    fill: #888;
}
.oscillator-pd-view {
    position: relative;
    display: inline-block;
    z-index: 1;
    canvas {
        z-index: -1;
        position: absolute;
    }
}
.oscillator-mix-view,
.oscillator-resonance-view {
    position: relative;
    display: inline-block;
    padding-top: 2rem;
    [type='range'] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
    }
    [type='range'] + label {
        position: absolute;
        top: 1.3rem;
    }
    fieldset {
        display: block;
    }
}
.keyboard.controller {
    border-right: 1px solid black;
}
body {
    padding: 2rem;
}
.modulation-matrix {
    tbody {
        &:nth-of-type(odd) {
            background: rgba(255,255,0,.5);
        }
        &:nth-of-type(even) {
            background: rgba(255, 150, 0, .5);
        }
    }
    th[scope='rowgroup'] {
        margin: 3px;
        position: relative;
        overflow: visible;
        padding: .5em;
        min-height: 1em;
        &,
        span {
            -webkit-writing-mode: vertical-lr;
            writing-mode: vertical-lr;
        }
    }
    col {
        &:nth-of-type(2n) {
            background-color: rgba(0,0,0,.3);
        }
        &:nth-of-type(3n) {
            background-color: rgba(255,0,0,.3);
        }
    }
    label {
        font-size: 0;
        line-height: 0;
        color: transparent;
    }
    td {
        padding: .5em;
    }
    [type='range'] {
        width: 3em;
    }
}